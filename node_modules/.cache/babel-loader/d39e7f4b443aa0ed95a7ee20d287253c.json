{"ast":null,"code":"export var dinoTypeSelector=function dinoTypeSelector(url){var dino;switch(url){case'Triassic Herbivore':dino='1';break;case'Triassic Carnivore':dino='2';break;case'Triassic Avian':dino='3';break;case'Triassic Marine':dino='4';break;case'Jurassic Herbivore':dino='5';break;case'Jurassic Carnivore':dino='6';break;case'Jurassic Avian':dino='7';break;case'Jurassic Marine':dino='8';break;case'Cretaceous Herbivore':dino='9';break;case'Cretaceous Carnivore':dino='10';break;case'Cretaceous Avian':dino='11';break;case'Cretaceous Marine':dino='12';break;default:console.log('it did not match anything');break;}return dino;};export var eraSelector=function eraSelector(url){if(url.includes('Triassic')){return 1;}else if(url.includes('Jurassic')){return 2;}else if(url.includes('Cretaceous')){return 3;}};","map":{"version":3,"sources":["/home/christopherdent/code/dinofinder-frontend/src/helpers/DinoSelector.js"],"names":["dinoTypeSelector","url","dino","console","log","eraSelector","includes"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAS,CACvC,GAAIC,CAAAA,IAAJ,CACF,OAAQD,GAAR,EACE,IAAK,oBAAL,CACAC,IAAI,CAAG,GAAP,CACE,MACF,IAAK,oBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACD,IAAK,gBAAL,CACCA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,iBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,oBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,oBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACA,IAAK,gBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,iBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,sBAAL,CACEA,IAAI,CAAG,GAAP,CACA,MACF,IAAK,sBAAL,CACEA,IAAI,CAAG,IAAP,CACA,MACF,IAAK,kBAAL,CACEA,IAAI,CAAG,IAAP,CACA,MACF,IAAK,mBAAL,CACEA,IAAI,CAAG,IAAP,CACA,MACJ,QACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EACE,MAvCJ,CAyCE,MAAOF,CAAAA,IAAP,CACD,CA5CM,CA8CP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,GAAD,CAAS,CAClC,GAAIA,GAAG,CAACK,QAAJ,CAAa,UAAb,CAAJ,CAA6B,CAC3B,MAAO,EAAP,CACD,CAFD,IAEO,IAAIL,GAAG,CAACK,QAAJ,CAAa,UAAb,CAAJ,CAA6B,CAClC,MAAO,EAAP,CACD,CAFM,IAEA,IAAIL,GAAG,CAACK,QAAJ,CAAa,YAAb,CAAJ,CAA+B,CACpC,MAAO,EAAP,CACD,CACF,CARM","sourcesContent":["export const dinoTypeSelector = (url) => {\r\n  let dino;\r\nswitch (url) {\r\n  case 'Triassic Herbivore':\r\n  dino = '1'\r\n    break;\r\n  case 'Triassic Carnivore':\r\n    dino = '2'\r\n    break;\r\n   case 'Triassic Avian':\r\n    dino = '3'\r\n    break;\r\n  case 'Triassic Marine':\r\n    dino = '4'\r\n    break;\r\n  case 'Jurassic Herbivore':\r\n    dino = '5'\r\n    break;\r\n  case 'Jurassic Carnivore':\r\n    dino = '6'\r\n    break;\r\n    case 'Jurassic Avian':\r\n      dino = '7'\r\n      break;\r\n    case 'Jurassic Marine':\r\n      dino = '8'\r\n      break;\r\n    case 'Cretaceous Herbivore':\r\n      dino = '9'\r\n      break;\r\n    case 'Cretaceous Carnivore':\r\n      dino = '10'\r\n      break;\r\n    case 'Cretaceous Avian':\r\n      dino = '11'\r\n      break;\r\n    case 'Cretaceous Marine':\r\n      dino = '12'\r\n      break;\r\n  default:\r\n  console.log('it did not match anything')\r\n    break;\r\n  }\r\n  return dino\r\n}\r\n\r\nexport const eraSelector = (url) => {\r\n  if (url.includes('Triassic')){\r\n    return 1\r\n  } else if (url.includes('Jurassic')){\r\n    return 2\r\n  } else if (url.includes('Cretaceous')){\r\n    return 3\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}