{"ast":null,"code":"import _classCallCheck from\"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import DinosaurCard from'../components/DinosaurCard';import DinosaurInput from'../components/DinosaurInput';import DinosaursList from'../components/DinosaursList';import{connect}from'react-redux';import{fetchDinosaurs}from'../actions/fetchDinosaurs';import{addDinosaur}from'../actions/addDinosaur';import{editDinosaur}from'../actions/editDinosaur';import{deleteDinosaur}from'../actions/deleteDinosaur';import{dinoTypeSelector}from'../helpers/DinoSelector.js';import{Container,Button}from'react-bootstrap';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DinosaursContainer=/*#__PURE__*/function(_React$Component){_inherits(DinosaursContainer,_React$Component);var _super=_createSuper(DinosaursContainer);function DinosaursContainer(props){var _this;_classCallCheck(this,DinosaursContainer);_this=_super.call(this,props);_this.handleDelete=function(dinosaur){_this.props.deleteDinosaur(dinosaur.id,dinosaur.dino_type.id,dinosaur.dino_type.era_id);};_this.listDinos=function(){if(_this.props.dinosaurs.dinosaurs){return _this.props.dinosaurs.dinosaurs.map(function(dinosaur,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DinosaurCard,{id:dinosaur.id,name:dinosaur.name,size:dinosaur.size,weight:dinosaur.weight,temporalRange:dinosaur.temporal_range,yearDiscovered:dinosaur.year_discovered,pictureUrl:dinosaur.picture_url,summary:dinosaur.summary,dinotypeId:dinosaur.dino_type_id,handleDelete:_this.handleDelete,dinosaur:dinosaur})},dinosaur.id);});}};_this.state={url:_this.routeParam=props.match.params.name,showHide:false,dinosaurs:[]};_this.hideComponent=_this.hideComponent.bind(_assertThisInitialized(_this));return _this;}_createClass(DinosaursContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchDinosaurs(this.state.url);///accessing the function through props (instead of on its own) allows us to connect function with Redux Store; arg telling it which dinosaurs to fetch based on params\n}},{key:\"hideComponent\",value:function hideComponent(name){if(name==='showHide'){this.setState({showHide:!this.state.showHide});}}},{key:\"render\",value:function render(){var _this2=this;var showHide=this.state.showHide;return/*#__PURE__*/_jsxs(Container,{id:\"dino-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center\",children:/*#__PURE__*/_jsx(Button,{id:\"add\",variant:\"success\",onClick:function onClick(){return _this2.hideComponent(\"showHide\");},children:showHide===false?\"Add Dinosaur to Collection\":\"Hide Form\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[\" \",showHide&&/*#__PURE__*/_jsx(DinosaurInput,{url:this.state.url,dinoType:dinoTypeSelector(this.state.url)}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(DinosaursList,{listDinos:this.listDinos()})]});}}]);return DinosaursContainer;}(React.Component);function mapStateToProps(state){return{dinosaurs:state.dinosaurs,url:state.url};}export default connect(mapStateToProps,{fetchDinosaurs:fetchDinosaurs,addDinosaur:addDinosaur,editDinosaur:editDinosaur,deleteDinosaur:deleteDinosaur})(DinosaursContainer);//here, fetchDinosaurs is sitting in for mapDispatchToProps and doing this makes IT a prop.","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/containers/DinosaursContainer.js"],"names":["React","DinosaurCard","DinosaurInput","DinosaursList","connect","fetchDinosaurs","addDinosaur","editDinosaur","deleteDinosaur","dinoTypeSelector","Container","Button","DinosaursContainer","props","handleDelete","dinosaur","id","dino_type","era_id","listDinos","dinosaurs","map","index","name","size","weight","temporal_range","year_discovered","picture_url","summary","dino_type_id","state","url","routeParam","match","params","showHide","hideComponent","bind","setState","Component","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport DinosaurCard from '../components/DinosaurCard'\r\nimport DinosaurInput from '../components/DinosaurInput'\r\nimport DinosaursList from '../components/DinosaursList'\r\nimport {connect} from 'react-redux'\r\nimport {fetchDinosaurs} from '../actions/fetchDinosaurs'\r\nimport { addDinosaur } from '../actions/addDinosaur'\r\nimport { editDinosaur } from '../actions/editDinosaur'\r\nimport { deleteDinosaur } from '../actions/deleteDinosaur'\r\nimport { dinoTypeSelector } from '../helpers/DinoSelector.js'\r\n\r\nimport {Container, Button } from 'react-bootstrap'\r\n\r\nclass DinosaursContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          url: this.routeParam = props.match.params.name,\r\n          showHide: false,\r\n          dinosaurs: []\r\n      };\r\n      this.hideComponent = this.hideComponent.bind(this);\r\n    }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDinosaurs(this.state.url)   ///accessing the function through props (instead of on its own) allows us to connect function with Redux Store; arg telling it which dinosaurs to fetch based on params\r\n  }\r\n\r\nhandleDelete = (dinosaur) => {\r\n    this.props.deleteDinosaur(dinosaur.id, dinosaur.dino_type.id, dinosaur.dino_type.era_id)\r\n  }\r\n\r\nhideComponent(name) {\r\n  if (name === 'showHide') {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n}\r\n\r\nlistDinos = () => {\r\n\r\n  if (this.props.dinosaurs.dinosaurs) {\r\n    return (\r\n      this.props.dinosaurs.dinosaurs.map((dinosaur, index) =>\r\n                 <div key={dinosaur.id}>\r\n                    <DinosaurCard\r\n                      id={dinosaur.id}\r\n                      name={dinosaur.name}\r\n                      size={dinosaur.size}\r\n                      weight={dinosaur.weight}\r\n                      temporalRange={dinosaur.temporal_range}\r\n                      yearDiscovered={dinosaur.year_discovered}\r\n                      pictureUrl={dinosaur.picture_url}\r\n                      summary={dinosaur.summary}\r\n                      dinotypeId={dinosaur.dino_type_id}\r\n                      handleDelete={this.handleDelete}\r\n                      dinosaur = {dinosaur}\r\n                      />\r\n                </div>)\r\n              )\r\n            }\r\n          }\r\n\r\n  render(){\r\n    const { showHide } = this.state;\r\n\r\n    return (\r\n      \r\n\r\n\r\n      <Container id=\"dino-container\">\r\n        <div className=\"text-center\">\r\n          <Button id=\"add\" variant=\"success\" onClick={() => this.hideComponent(\"showHide\")}>{showHide === false ? \"Add Dinosaur to Collection\" : \"Hide Form\"}</Button>\r\n        </div>\r\n        <div> {showHide && <DinosaurInput url={this.state.url} dinoType={dinoTypeSelector(this.state.url)}/>}<br /></div>\r\n\r\n        <DinosaursList listDinos= {this.listDinos()}/>\r\n\r\n\r\n      </Container>\r\n\r\n      \r\n    \r\n      )\r\n    }\r\n  }\r\n     \r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dinosaurs: state.dinosaurs,\r\n    url: state.url\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchDinosaurs, addDinosaur, editDinosaur, deleteDinosaur})(DinosaursContainer)   //here, fetchDinosaurs is sitting in for mapDispatchToProps and doing this makes IT a prop."]},"metadata":{},"sourceType":"module"}