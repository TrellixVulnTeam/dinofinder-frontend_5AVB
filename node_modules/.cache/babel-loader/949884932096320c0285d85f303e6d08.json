{"ast":null,"code":"export function fetchDinosaurs(url) {\n  return dispatch => {\n    const dinoTypeSelector = url => {\n      let dino;\n\n      switch (url) {\n        case 'Triassic Herbivore':\n          dino = '1';\n          break;\n\n        case 'Triassic Carnivore':\n          dino = '2';\n          break;\n\n        case 'Triassic Avian':\n          dino = '3';\n          break;\n\n        case 'Triassic Marine':\n          dino = '4';\n          break;\n\n        case 'Jurassic Herbivore':\n          dino = '5';\n          break;\n\n        case 'Jurassic Carnivore':\n          dino = '6';\n          break;\n\n        case 'Jurassic Avian':\n          dino = '7';\n          break;\n\n        case 'Jurassic Marine':\n          dino = '8';\n          break;\n\n        case 'Cretaceous Herbivore':\n          dino = '9';\n          break;\n\n        case 'Cretaceous Carnivore':\n          dino = '10';\n          break;\n\n        case 'Cretaceous Avian':\n          dino = '11';\n          break;\n\n        case 'Cretaceous Marine':\n          dino = '12';\n          break;\n\n        default:\n          console.log('it did not match anything');\n          break;\n      }\n\n      return dino;\n    };\n\n    const eraSelector = url => {\n      if (url.includes('Triassic')) {\n        return 1;\n      } else if (url.includes('Jurassic')) {\n        return 2;\n      } else if (url.includes('Cretaceous')) {\n        return 3;\n      }\n    };\n\n    return fetch(`https://murmuring-mesa-24613.herokuapp.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`) ///fetching to different urls based on the params from the first page.\n    .then(resp => resp.json()).then(dinosaurs => dispatch({\n      type: 'FETCH_DINOSAURS',\n      payload: dinosaurs\n    }));\n  };\n}\nexport default fetchDinosaurs;","map":{"version":3,"names":["fetchDinosaurs","url","dispatch","dinoTypeSelector","dino","console","log","eraSelector","includes","fetch","then","resp","json","dinosaurs","type","payload"],"sources":["/Users/christopher.dentopscompass.com/Documents/dinofinder-frontend/src/actions/fetchDinosaurs.js"],"sourcesContent":["\r\nexport function fetchDinosaurs(url) {\r\n\r\nreturn (dispatch) => {\r\n\r\n  const dinoTypeSelector = (url) => {\r\n    let dino;\r\n  switch (url) {\r\n    case 'Triassic Herbivore':\r\n    dino = '1'\r\n      break;\r\n    case 'Triassic Carnivore':\r\n      dino = '2'\r\n      break;\r\n     case 'Triassic Avian':\r\n      dino = '3'\r\n      break;\r\n    case 'Triassic Marine':\r\n      dino = '4'\r\n      break;\r\n    case 'Jurassic Herbivore':\r\n      dino = '5'\r\n      break;\r\n    case 'Jurassic Carnivore':\r\n      dino = '6'\r\n      break;\r\n      case 'Jurassic Avian':\r\n        dino = '7'\r\n        break;\r\n      case 'Jurassic Marine':\r\n        dino = '8'\r\n        break;\r\n      case 'Cretaceous Herbivore':\r\n        dino = '9'\r\n        break;\r\n      case 'Cretaceous Carnivore':\r\n        dino = '10'\r\n        break;\r\n      case 'Cretaceous Avian':\r\n        dino = '11'\r\n        break;\r\n      case 'Cretaceous Marine':\r\n        dino = '12'\r\n        break;\r\n    default:\r\n    console.log('it did not match anything')\r\n      break;\r\n    }\r\n    return dino\r\n  }\r\n\r\n  const eraSelector = (url) => {\r\n\r\n    if (url.includes('Triassic')){\r\n      return 1\r\n    } else if (url.includes('Jurassic')){\r\n      return 2\r\n    } else if (url.includes('Cretaceous')){\r\n      return 3\r\n    }\r\n  }\r\n\r\n  return fetch(`https://murmuring-mesa-24613.herokuapp.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`)  ///fetching to different urls based on the params from the first page.\r\n  .then(resp => resp.json())\r\n  .then(dinosaurs => dispatch({\r\n      type: 'FETCH_DINOSAURS',\r\n      payload: dinosaurs\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\nexport default fetchDinosaurs\r\n"],"mappings":"AACA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;EAEpC,OAAQC,QAAD,IAAc;IAEnB,MAAMC,gBAAgB,GAAIF,GAAD,IAAS;MAChC,IAAIG,IAAJ;;MACF,QAAQH,GAAR;QACE,KAAK,oBAAL;UACAG,IAAI,GAAG,GAAP;UACE;;QACF,KAAK,oBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACD,KAAK,gBAAL;UACCA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,iBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,oBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,oBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACA,KAAK,gBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,iBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,sBAAL;UACEA,IAAI,GAAG,GAAP;UACA;;QACF,KAAK,sBAAL;UACEA,IAAI,GAAG,IAAP;UACA;;QACF,KAAK,kBAAL;UACEA,IAAI,GAAG,IAAP;UACA;;QACF,KAAK,mBAAL;UACEA,IAAI,GAAG,IAAP;UACA;;QACJ;UACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;UACE;MAvCJ;;MAyCE,OAAOF,IAAP;IACD,CA5CD;;IA8CA,MAAMG,WAAW,GAAIN,GAAD,IAAS;MAE3B,IAAIA,GAAG,CAACO,QAAJ,CAAa,UAAb,CAAJ,EAA6B;QAC3B,OAAO,CAAP;MACD,CAFD,MAEO,IAAIP,GAAG,CAACO,QAAJ,CAAa,UAAb,CAAJ,EAA6B;QAClC,OAAO,CAAP;MACD,CAFM,MAEA,IAAIP,GAAG,CAACO,QAAJ,CAAa,YAAb,CAAJ,EAA+B;QACpC,OAAO,CAAP;MACD;IACF,CATD;;IAWA,OAAOC,KAAK,CAAE,0DAAyDF,WAAW,CAACN,GAAD,CAAM,eAAcE,gBAAgB,CAACF,GAAD,CAAM,YAAhH,CAAL,CAAmI;IAAnI,CACNS,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,EAENF,IAFM,CAEDG,SAAS,IAAIX,QAAQ,CAAC;MACxBY,IAAI,EAAE,iBADkB;MAExBC,OAAO,EAAEF;IAFe,CAAD,CAFpB,CAAP;EAMG,CAjEL;AAkEG;AAGH,eAAeb,cAAf"},"metadata":{},"sourceType":"module"}