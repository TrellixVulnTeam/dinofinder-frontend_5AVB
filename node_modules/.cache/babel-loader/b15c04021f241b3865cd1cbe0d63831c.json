{"ast":null,"code":"import _classCallCheck from\"/mnt/c/Users/chris/code/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/c/Users/chris/code/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/c/Users/chris/code/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/c/Users/chris/code/dinofinder-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import DinoTypeCard from'../components/DinoTypeCard';import{connect}from'react-redux';import DinoTypesList from'../components/DinoTypesList';import{fetchDinoTypes}from'../actions/fetchDinoTypes';import{jsx as _jsx}from\"react/jsx-runtime\";var DinoTypesContainer=/*#__PURE__*/function(_React$Component){_inherits(DinoTypesContainer,_React$Component);var _super=_createSuper(DinoTypesContainer);function DinoTypesContainer(props){var _this;_classCallCheck(this,DinoTypesContainer);_this=_super.call(this,props);_this.listDinoTypes=function(){if(_this.props.dinotypes.dinotypes){return _this.props.dinotypes.dinotypes.map(function(dinotype,index){return/*#__PURE__*/_jsx(DinoTypeCard,{id:dinotype.id,name:dinotype.name,pictureUrl:dinotype.picture_url},index);});}};_this.state={url:_this.routeParam=props.match.params.name,dinotypes:''};return _this;}_createClass(DinoTypesContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchDinoTypes(this.state.url);//argument helps interpolate the proper URL in the action\n}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",id:\"centered\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(DinoTypesList,{listDinoTypes:this.listDinoTypes()})})})});}}]);return DinoTypesContainer;}(React.Component);;var mapStateToProps=function mapStateToProps(state){return{dinotypes:state.dinotypes,url:state.url};};export default connect(mapStateToProps,{fetchDinoTypes:fetchDinoTypes})(DinoTypesContainer);","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder-frontend/src/containers/DinoTypesContainer.js"],"names":["React","DinoTypeCard","connect","DinoTypesList","fetchDinoTypes","DinoTypesContainer","props","listDinoTypes","dinotypes","map","dinotype","index","id","name","picture_url","state","url","routeParam","match","params","Component","mapStateToProps"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,cAAR,KAA6B,2BAA7B,C,8CAGMC,CAAAA,kB,oIAEJ,4BAAYC,KAAZ,CAAmB,oDACjB,uBAAMA,KAAN,EADiB,MAarBC,aAbqB,CAaL,UAAM,CACpB,GAAI,MAAKD,KAAL,CAAWE,SAAX,CAAqBA,SAAzB,CAAoC,CAClC,MACE,OAAKF,KAAL,CAAWE,SAAX,CAAqBA,SAArB,CAA+BC,GAA/B,CAAmC,SAACC,QAAD,CAAWC,KAAX,qBACjC,KAAC,YAAD,EAEE,EAAE,CAAED,QAAQ,CAACE,EAFf,CAGE,IAAI,CAAEF,QAAQ,CAACG,IAHjB,CAIE,UAAU,CAAEH,QAAQ,CAACI,WAJvB,EACOH,KADP,CADiC,EAAnC,CADF,CASC,CACF,CAzBkB,CAEjB,MAAKI,KAAL,CAAa,CACPC,GAAG,CAAE,MAAKC,UAAL,CAAkBX,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBN,IADnC,CAEPL,SAAS,CAAE,EAFJ,CAAb,CAFiB,aAMlB,C,gEAEH,4BAAmB,CACf,KAAKF,KAAL,CAAWF,cAAX,CAA0B,KAAKW,KAAL,CAAWC,GAArC,EAA2C;AAC9C,C,sBAmBC,iBAAQ,CACN,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,YAAK,SAAS,CAAC,WAAf,CAA2B,EAAE,CAAC,UAA9B,uBACA,kCACE,KAAC,aAAD,EAAe,aAAa,CAAE,KAAKT,aAAL,EAA9B,EADF,EADA,EADF,EADF,CASD,C,gCAzC8BP,KAAK,CAACoB,S,EA0CtC,CAED,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACN,KAAD,CAAW,CACjC,MAAO,CACLP,SAAS,CAAEO,KAAK,CAACP,SADZ,CAELQ,GAAG,CAAED,KAAK,CAACC,GAFN,CAAP,CAID,CALD,CAOA,cAAed,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAACjB,cAAc,CAAdA,cAAD,CAAlB,CAAP,CAA4CC,kBAA5C,CAAf","sourcesContent":["import React from 'react'\r\nimport DinoTypeCard from '../components/DinoTypeCard'\r\nimport {connect} from 'react-redux'\r\nimport DinoTypesList from '../components/DinoTypesList'\r\nimport {fetchDinoTypes} from '../actions/fetchDinoTypes'\r\n\r\n\r\nclass DinoTypesContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          url: this.routeParam = props.match.params.name,\r\n          dinotypes: ''\r\n      };\r\n  };\r\n\r\ncomponentDidMount(){\r\n    this.props.fetchDinoTypes(this.state.url)  //argument helps interpolate the proper URL in the action\r\n};\r\n\r\n\r\nlistDinoTypes = () => {\r\n  if (this.props.dinotypes.dinotypes) {\r\n    return (\r\n      this.props.dinotypes.dinotypes.map((dinotype, index) =>\r\n        <DinoTypeCard\r\n          key={index} \r\n          id={dinotype.id}\r\n          name={dinotype.name}\r\n          pictureUrl={dinotype.picture_url} />\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container\" id=\"centered\">\r\n        <div>\r\n          <DinoTypesList listDinoTypes={this.listDinoTypes()}/>\r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dinotypes: state.dinotypes,\r\n    url: state.url\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchDinoTypes} )(DinoTypesContainer)\r\n"]},"metadata":{},"sourceType":"module"}