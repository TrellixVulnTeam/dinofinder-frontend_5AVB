{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport dinosaursReducer from './reducers/dinosaursReducer';\nimport erasReducer from './reducers/erasReducer';\nimport dinoTypesReducer from './reducers/dinoTypesReducer';\nimport { combineReducers } from \"redux\";\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootReducer = combineReducers({\n  eras: erasReducer,\n  //this causes the unwanted nesting.\n  dinotypes: dinoTypesReducer,\n  dinosaurs: dinosaursReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst LoadingIndicator = props => {\n  _s();\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n  return promiseInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Circles\",\n      color: \"#00008b\",\n      height: \"300\",\n      width: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(LoadingIndicator, \"KTo1xiutw/iZHt+hlD1avyNKva4=\", false, function () {\n  return [usePromiseTracker];\n});\n\n_c = LoadingIndicator;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingIndicator\");","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","thunk","dinosaursReducer","erasReducer","dinoTypesReducer","combineReducers","App","usePromiseTracker","Loader","rootReducer","eras","dinotypes","dinosaurs","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","LoadingIndicator","props","promiseInProgress","width","height","display","justifyContent","alignItems","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAGA,OAAO,sCAAP;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAClCK,EAAAA,IAAI,EAAEP,WAD4B;AACf;AACnBQ,EAAAA,SAAS,EAAEP,gBAFuB;AAGlCQ,EAAAA,SAAS,EAAEV;AAHuB,CAAD,CAAnC;AAMA,MAAMW,gBAAgB,GAAIC,MAAM,CAACC,oCAAP,IAA+Cf,OAAzE;AAEA,IAAIgB,KAAK,GAAGlB,WAAW,CAACW,WAAD,EAAcI,gBAAgB,CAACd,eAAe,CAACE,KAAD,CAAhB,CAA9B,CAAvB;;AAEA,MAAMgB,gBAAgB,GAAGC,KAAK,IAAI;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAwBZ,iBAAiB,EAA/C;AAEC,SAAOY,iBAAiB,iBAEvB;AACA,IAAA,KAAK,EAAI;AACPC,MAAAA,KAAK,EAAE,MADA;AAEPC,MAAAA,MAAM,EAAE,KAFD;AAGPC,MAAAA,OAAO,EAAE,MAHF;AAIPC,MAAAA,cAAc,EAAE,QAJT;AAKPC,MAAAA,UAAU,EAAE;AALL,KADT;AAAA,2BAUE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,KAAK,EAAC,SAA7B;AAAuC,MAAA,MAAM,EAAC,KAA9C;AAAoD,MAAA,KAAK,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UAFD;AAeD,CAlBJ;;GAAMP,gB;UAC4BV,iB;;;KAD5BU,gB;AAoBNrB,QAAQ,CAAC6B,MAAT,eAEI,QAAC,QAAD;AAAU,EAAA,KAAK,EAAKT,KAApB;AAAA,0BAEE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF,E,CAYA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport dinosaursReducer from './reducers/dinosaursReducer'\r\nimport erasReducer from './reducers/erasReducer'\r\nimport dinoTypesReducer from './reducers/dinoTypesReducer'\r\nimport { combineReducers } from \"redux\";\r\nimport App from './App';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst rootReducer = combineReducers({\r\n  eras: erasReducer, //this causes the unwanted nesting.\r\n  dinotypes: dinoTypesReducer,\r\n  dinosaurs: dinosaursReducer\r\n})\r\n\r\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst LoadingIndicator = props => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n  \r\n     return promiseInProgress && \r\n   \r\n      <div\r\n      style = {{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n      >\r\n        \r\n        <Loader type=\"Circles\" color=\"#00008b\" height=\"300\" width=\"300\" />\r\n        </div>\r\n\r\n   }\r\n\r\nReactDOM.render(\r\n  \r\n    <Provider store = { store }>\r\n  \r\n      <App />\r\n      <LoadingIndicator/>\r\n     \r\n    \r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"]},"metadata":{},"sourceType":"module"}