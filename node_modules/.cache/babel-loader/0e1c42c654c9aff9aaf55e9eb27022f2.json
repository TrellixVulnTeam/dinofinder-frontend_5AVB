{"ast":null,"code":"var _jsxFileName = \"/Users/christopher.dentopscompass.com/Documents/dinofinder-frontend/src/containers/DinosaursContainer.js\";\nimport React from 'react';\nimport DinosaurCard from '../components/DinosaurCard';\nimport DinosaurInput from '../components/DinosaurInput';\nimport DinosaursList from '../components/DinosaursList';\nimport { connect } from 'react-redux';\nimport { fetchDinosaurs } from '../actions/fetchDinosaurs';\nimport { addDinosaur } from '../actions/addDinosaur';\nimport { editDinosaur } from '../actions/editDinosaur';\nimport { deleteDinosaur } from '../actions/deleteDinosaur';\nimport { dinoTypeSelector } from '../helpers/DinoSelector.js';\nimport { Container, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DinosaursContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = dinosaur => {\n      this.props.deleteDinosaur(dinosaur.id, dinosaur.dino_type.id, dinosaur.dino_type.era_id);\n    };\n\n    this.listDinos = () => {\n      if (this.props.dinosaurs.dinosaurs) {\n        return this.props.dinosaurs.dinosaurs.map((dinosaur, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DinosaurCard, {\n            id: dinosaur.id,\n            name: dinosaur.name,\n            size: dinosaur.size,\n            weight: dinosaur.weight,\n            temporalRange: dinosaur.temporal_range,\n            yearDiscovered: dinosaur.year_discovered,\n            pictureUrl: dinosaur.picture_url,\n            summary: dinosaur.summary,\n            dinotypeId: dinosaur.dino_type_id,\n            handleDelete: this.handleDelete,\n            dinosaur: dinosaur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, dinosaur.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this));\n      }\n    };\n\n    this.state = {\n      url: this.routeParam = props.match.params.name,\n      showHide: false,\n      dinosaurs: []\n    };\n    this.hideComponent = this.hideComponent.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchDinosaurs(this.state.url); ///accessing the function through props (instead of on its own) allows us to connect function with Redux Store; arg telling it which dinosaurs to fetch based on params\n  }\n\n  hideComponent(name) {\n    if (name === 'showHide') {\n      this.setState({\n        showHide: !this.state.showHide\n      });\n    }\n  }\n\n  render() {\n    const {\n      showHide\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      id: \"dino-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          id: \"add\",\n          variant: \"success\",\n          onClick: () => this.hideComponent(\"showHide\"),\n          children: showHide === false ? \"Add Dinosaur to Collection\" : \"Hide Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", showHide && /*#__PURE__*/_jsxDEV(DinosaurInput, {\n          url: this.state.url,\n          dinoType: dinoTypeSelector(this.state.url)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 110\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DinosaursList, {\n        listDinos: this.listDinos()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dinosaurs: state.dinosaurs,\n    url: state.url\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchDinosaurs,\n  addDinosaur,\n  editDinosaur,\n  deleteDinosaur\n})(DinosaursContainer); //here, fetchDinosaurs is sitting in for mapDispatchToProps and doing this makes IT a prop.","map":{"version":3,"names":["React","DinosaurCard","DinosaurInput","DinosaursList","connect","fetchDinosaurs","addDinosaur","editDinosaur","deleteDinosaur","dinoTypeSelector","Container","Button","DinosaursContainer","Component","constructor","props","handleDelete","dinosaur","id","dino_type","era_id","listDinos","dinosaurs","map","index","name","size","weight","temporal_range","year_discovered","picture_url","summary","dino_type_id","state","url","routeParam","match","params","showHide","hideComponent","bind","componentDidMount","setState","render","mapStateToProps"],"sources":["/Users/christopher.dentopscompass.com/Documents/dinofinder-frontend/src/containers/DinosaursContainer.js"],"sourcesContent":["import React from 'react'\r\nimport DinosaurCard from '../components/DinosaurCard'\r\nimport DinosaurInput from '../components/DinosaurInput'\r\nimport DinosaursList from '../components/DinosaursList'\r\nimport {connect} from 'react-redux'\r\nimport {fetchDinosaurs} from '../actions/fetchDinosaurs'\r\nimport { addDinosaur } from '../actions/addDinosaur'\r\nimport { editDinosaur } from '../actions/editDinosaur'\r\nimport { deleteDinosaur } from '../actions/deleteDinosaur'\r\nimport { dinoTypeSelector } from '../helpers/DinoSelector.js'\r\n\r\nimport {Container, Button } from 'react-bootstrap'\r\n\r\nclass DinosaursContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          url: this.routeParam = props.match.params.name,\r\n          showHide: false,\r\n          dinosaurs: []\r\n      };\r\n      this.hideComponent = this.hideComponent.bind(this);\r\n    }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDinosaurs(this.state.url)   ///accessing the function through props (instead of on its own) allows us to connect function with Redux Store; arg telling it which dinosaurs to fetch based on params\r\n  }\r\n\r\nhandleDelete = (dinosaur) => {\r\n    this.props.deleteDinosaur(dinosaur.id, dinosaur.dino_type.id, dinosaur.dino_type.era_id)\r\n  }\r\n\r\nhideComponent(name) {\r\n  if (name === 'showHide') {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n}\r\n\r\nlistDinos = () => {\r\n\r\n  if (this.props.dinosaurs.dinosaurs) {\r\n    return (\r\n      this.props.dinosaurs.dinosaurs.map((dinosaur, index) =>\r\n                 <div key={dinosaur.id}>\r\n                    <DinosaurCard\r\n                      id={dinosaur.id}\r\n                      name={dinosaur.name}\r\n                      size={dinosaur.size}\r\n                      weight={dinosaur.weight}\r\n                      temporalRange={dinosaur.temporal_range}\r\n                      yearDiscovered={dinosaur.year_discovered}\r\n                      pictureUrl={dinosaur.picture_url}\r\n                      summary={dinosaur.summary}\r\n                      dinotypeId={dinosaur.dino_type_id}\r\n                      handleDelete={this.handleDelete}\r\n                      dinosaur = {dinosaur}\r\n                      />\r\n                </div>)\r\n              )\r\n            }\r\n          }\r\n\r\n  render(){\r\n    const { showHide } = this.state;\r\n\r\n    return (\r\n      \r\n\r\n\r\n      <Container id=\"dino-container\">\r\n        <div className=\"text-center\">\r\n          <Button \r\n          id=\"add\" \r\n          variant=\"success\" \r\n          onClick={() => this.hideComponent(\"showHide\")}>\r\n            \r\n            {showHide === false ? \"Add Dinosaur to Collection\" : \"Hide Form\"}\r\n          </Button>\r\n        \r\n        </div>\r\n        \r\n        <div> {showHide && <DinosaurInput url={this.state.url} dinoType={dinoTypeSelector(this.state.url)}/>}<br /></div>\r\n\r\n        <DinosaursList listDinos= {this.listDinos()}/>\r\n\r\n\r\n      </Container>\r\n\r\n      \r\n    \r\n      )\r\n    }\r\n  }\r\n     \r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dinosaurs: state.dinosaurs,\r\n    url: state.url\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchDinosaurs, addDinosaur, editDinosaur, deleteDinosaur})(DinosaursContainer)   //here, fetchDinosaurs is sitting in for mapDispatchToProps and doing this makes IT a prop."],"mappings":"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"},"metadata":{},"sourceType":"module"}