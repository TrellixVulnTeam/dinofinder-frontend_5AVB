{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{Provider}from'react-redux';import{createStore,applyMiddleware,compose}from'redux';import thunk from'redux-thunk';import dinosaursReducer from'./reducers/dinosaursReducer';import erasReducer from'./reducers/erasReducer';import dinoTypesReducer from'./reducers/dinoTypesReducer';import{combineReducers}from\"redux\";import App from'./App';import'bootstrap/dist/css/bootstrap.min.css';import{usePromiseTracker}from\"react-promise-tracker\";import Loader from'react-loader-spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var rootReducer=combineReducers({eras:erasReducer,//this causes the unwanted nesting.\ndinotypes:dinoTypesReducer,dinosaurs:dinosaursReducer});var composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose;var store=createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));var LoadingIndicator=function LoadingIndicator(props){var _usePromiseTracker=usePromiseTracker(),promiseInProgress=_usePromiseTracker.promiseInProgress;return promiseInProgress&&/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"100\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(Loader,{type:\"MutatingDots\",color:\"#00008b\",height:\"300\",width:\"300\"})});};ReactDOM.render(/*#__PURE__*/_jsxs(Provider,{store:store,children:[/*#__PURE__*/_jsx(App,{}),/*#__PURE__*/_jsx(LoadingIndicator,{})]}),document.getElementById('root'));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","thunk","dinosaursReducer","erasReducer","dinoTypesReducer","combineReducers","App","usePromiseTracker","Loader","rootReducer","eras","dinotypes","dinosaurs","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","LoadingIndicator","props","promiseInProgress","width","height","display","justifyContent","alignItems","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,OAASC,eAAT,KAAgC,OAAhC,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CAEA,MAAO,sCAAP,CACA,OAASC,iBAAT,KAAkC,uBAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAGJ,eAAe,CAAC,CAClCK,IAAI,CAAEP,WAD4B,CACf;AACnBQ,SAAS,CAAEP,gBAFuB,CAGlCQ,SAAS,CAAEV,gBAHuB,CAAD,CAAnC,CAMA,GAAMW,CAAAA,gBAAgB,CAAIC,MAAM,CAACC,oCAAP,EAA+Cf,OAAzE,CAEA,GAAIgB,CAAAA,KAAK,CAAGlB,WAAW,CAACW,WAAD,CAAcI,gBAAgB,CAACd,eAAe,CAACE,KAAD,CAAhB,CAA9B,CAAvB,CAEA,GAAMgB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAAC,KAAK,CAAI,CAC9B,uBAA8BX,iBAAiB,EAA/C,CAAQY,iBAAR,oBAAQA,iBAAR,CAEC,MAAOA,CAAAA,iBAAiB,eAEvB,YACA,KAAK,CAAI,CACPC,KAAK,CAAE,MADA,CAEPC,MAAM,CAAE,KAFD,CAGPC,OAAO,CAAE,MAHF,CAIPC,cAAc,CAAE,QAJT,CAKPC,UAAU,CAAE,QALL,CADT,uBAUE,KAAC,MAAD,EAAQ,IAAI,CAAC,cAAb,CAA4B,KAAK,CAAC,SAAlC,CAA4C,MAAM,CAAC,KAAnD,CAAyD,KAAK,CAAC,KAA/D,EAVF,EAFD,CAeD,CAlBJ,CAoBA5B,QAAQ,CAAC6B,MAAT,cAEI,MAAC,QAAD,EAAU,KAAK,CAAKT,KAApB,wBACE,KAAC,GAAD,IADF,cAEE,KAAC,gBAAD,IAFF,GAFJ,CAMEU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,EASA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport dinosaursReducer from './reducers/dinosaursReducer'\r\nimport erasReducer from './reducers/erasReducer'\r\nimport dinoTypesReducer from './reducers/dinoTypesReducer'\r\nimport { combineReducers } from \"redux\";\r\nimport App from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst rootReducer = combineReducers({\r\n  eras: erasReducer, //this causes the unwanted nesting.\r\n  dinotypes: dinoTypesReducer,\r\n  dinosaurs: dinosaursReducer\r\n})\r\n\r\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst LoadingIndicator = props => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n  \r\n     return promiseInProgress && \r\n   \r\n      <div\r\n      style = {{\r\n        width: \"100%\",\r\n        height: \"100\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n      }}\r\n      >\r\n        \r\n        <Loader type=\"MutatingDots\" color=\"#00008b\" height=\"300\" width=\"300\" />\r\n        </div>\r\n\r\n   }\r\n\r\nReactDOM.render(\r\n  \r\n    <Provider store = { store }>\r\n      <App />\r\n      <LoadingIndicator/>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"]},"metadata":{},"sourceType":"module"}