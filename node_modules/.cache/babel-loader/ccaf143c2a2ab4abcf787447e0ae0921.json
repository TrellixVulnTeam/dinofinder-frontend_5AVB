{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/components/DinosaurCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DinosaurEdit from '../components/DinosaurEdit';\nimport DeleteConfirm from '../components/DeleteConfirm';\nimport { Col, Card, Accordion, Button } from 'react-bootstrap';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DinosaurCard = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card card-inverse card-success card-primary mb-3 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: props.pictureUrl,\n            alt: \"Artist impression of {props.name}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", props.size, \" \", props.size ? \"feet\" : \"?\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Weight: \", props.weight, \" \", props.weight ? \"pounds\" : \"?\", \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Year Discovered:  \", props.yearDiscovered, \" \", props.yearDiscovered ? \"\" : \"?\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Years Lived: \", props.temporalRange]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: props.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                  as: Button,\n                  id: props.id,\n                  eventKey: \"0\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Edit \", props.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n                eventKey: \"0\",\n                children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(DinosaurEdit, {\n                    dinosaur: props.dinosaur,\n                    url: props.url,\n                    dinoId: props.id,\n                    dinoName: props.name,\n                    dinoSize: props.size !== null ? props.size : '',\n                    dinoWeight: props.weight !== null ? props.weight : '',\n                    dinoRange: props.temporalRange !== null ? props.temporalRange : '',\n                    dinoYear: props.yearDiscovered !== null ? props.yearDiscovered : '',\n                    dinoPic: props.pictureUrl,\n                    dinoSummary: props.summary !== null ? props.summary : ''\n                    /* the terinary operators in here just check to see if the prop exists so it does not pass null down to the edit form, because that makes the form uncontrolled. */\n                    ,\n                    era: props.dinosaur.dino_type.era_id,\n                    dinoTypeId: props.dinotypeId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: handleShow,\n                  children: [\"Delete \", props.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(DeleteConfirm, {\n                  showModal: show,\n                  handleClose: handleClose,\n                  handleDelete: props.handleDelete,\n                  dinosaur: props.dinosaur,\n                  dinosaurId: props.id,\n                  name: props.name,\n                  handleDelete: props.handleDelete\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DinosaurCard, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = DinosaurCard;\nDinosaurCard.defaultProps = {\n  dinoPic: 'https://ecdn.teacherspayteachers.com/thumbitem/Dinosaur-with-hand-sanitizer-and-face-mask-5487390-1587563440/original-5487390-1.jpg'\n}; ///so i need the commit button to change the div class to 'collapse show'\n\nexport default DinosaurCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DinosaurCard\");","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder/dinofinder-frontend/src/components/DinosaurCard.js"],"names":["React","DinosaurEdit","DeleteConfirm","Col","Card","Accordion","Button","useState","DinosaurCard","props","show","setShow","handleClose","handleShow","pictureUrl","name","size","weight","yearDiscovered","temporalRange","summary","id","dinosaur","url","dino_type","era_id","dinotypeId","handleDelete","defaultProps","dinoPic"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport DinosaurEdit from '../components/DinosaurEdit'\r\nimport DeleteConfirm from '../components/DeleteConfirm'\r\nimport { Col, Card, Accordion, Button } from 'react-bootstrap'\r\nimport { useState } from \"react\";\r\n\r\nconst DinosaurCard = (props) => {\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n    <React.Fragment>\r\n        <center><Col>\r\n            <Card className=\"card card-inverse card-success card-primary mb-3 text-center\">\r\n                <img src = {props.pictureUrl} alt = 'Artist impression of {props.name}' />\r\n                  <Card.Header>{props.name}</Card.Header>\r\n                  <p>Size: {props.size} {props.size ? \"feet\" : \"?\"} </p>\r\n                  <p>Weight: {props.weight} {props.weight ? \"pounds\" : \"?\"}  </p>\r\n                  <p>Year Discovered:  {props.yearDiscovered} {props.yearDiscovered ? \"\" : \"?\"} </p>\r\n                  <p>Years Lived: {props.temporalRange}</p>\r\n                  <Card.Text>{props.summary}</Card.Text>\r\n                  {/* <br /><LikeButton /><br /> */}\r\n                <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} id={props.id} eventKey=\"0\">\r\n                        <span>Edit {props.name}</span>\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <DinosaurEdit\r\n                        dinosaur={props.dinosaur}\r\n                        url={props.url}\r\n                        dinoId = {props.id}\r\n                        dinoName = {props.name}\r\n                        dinoSize = {props.size !== null ? props.size : ''}\r\n                        dinoWeight = {props.weight !== null ? props.weight : ''}\r\n                        dinoRange = {props.temporalRange !== null ? props.temporalRange : ''}\r\n                        dinoYear = {props.yearDiscovered !== null ? props.yearDiscovered : ''}\r\n                        dinoPic = {props.pictureUrl}\r\n                        dinoSummary = {props.summary !== null ? props.summary : ''}  /* the terinary operators in here just check to see if the prop exists so it does not pass null down to the edit form, because that makes the form uncontrolled. */\r\n                        era = { props.dinosaur.dino_type.era_id }\r\n                        dinoTypeId = {props.dinotypeId}\r\n\r\n                         />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n                    <Card>\r\n                      <Card.Body>\r\n\r\n                      <button className=\"btn btn-danger\" onClick={handleShow}>Delete {props.name}</button>\r\n\r\n                      <DeleteConfirm showModal={show} handleClose = {handleClose} handleDelete = {props.handleDelete} dinosaur={props.dinosaur} dinosaurId={props.id} name={props.name} handleDelete = {props.handleDelete} />\r\n                        \r\n                    </Card.Body>\r\n                    </Card>\r\n                </Accordion>\r\n              </Card>\r\n            </Col>\r\n            </center>\r\n          </React.Fragment>\r\n        );\r\n      }\r\nDinosaurCard.defaultProps = {\r\n  dinoPic: 'https://ecdn.teacherspayteachers.com/thumbitem/Dinosaur-with-hand-sanitizer-and-face-mask-5487390-1587563440/original-5487390-1.jpg'\r\n\r\n}\r\n///so i need the commit button to change the div class to 'collapse show'\r\nexport default DinosaurCard"]},"metadata":{},"sourceType":"module"}