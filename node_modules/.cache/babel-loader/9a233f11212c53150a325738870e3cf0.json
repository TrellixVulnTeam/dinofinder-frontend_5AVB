{"ast":null,"code":"import { dinoTypeSelector } from '../helpers/DinoSelector.js';\nimport { eraSelector } from '../helpers/DinoSelector.js';\nexport const addDinosaur = (data, url) => {\n  dinoTypeSelector(url); //since its loading from scratch I use dinoSelector and eraSelector helpers to complete the correct fetch URL, in lieu of a dinosaur object like in the others.\n\n  return dispatch => {\n    return fetch(`https://murmuring-mesa-24613.herokuapp.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(dinosaur => // console.log(dinosaur)\n    dispatch({\n      type: 'ADD_DINOSAUR',\n      payload: dinosaur\n    }));\n  };\n}; /// EXAMPLE URL - in reality i think i need to know the ERA and DINO TYPE and interpolate them into the URL.  (just add those options to the form and interpolate wth dot notation off of data)","map":{"version":3,"sources":["/mnt/c/Users/chris/code/dinofinder-frontend/src/actions/addDinosaur.js"],"names":["dinoTypeSelector","eraSelector","addDinosaur","data","url","dispatch","fetch","headers","method","body","JSON","stringify","then","response","json","dinosaur","type","payload"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,4BAAjC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxCJ,EAAAA,gBAAgB,CAACI,GAAD,CAAhB,CADwC,CAI1C;;AACE,SAAQC,QAAD,IAAc;AACnB,WAAOC,KAAK,CAAE,0DAAyDL,WAAW,CAACG,GAAD,CAAM,eAAcJ,gBAAgB,CAACI,GAAD,CAAM,YAAhH,EAA6H;AACvIG,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAD8H;AAKvIC,MAAAA,MAAM,EAAE,MAL+H;AAMvIC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANiI,KAA7H,CAAL,CAQNS,IARM,CAQDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARX,EAUNF,IAVM,CAUDG,QAAQ,IACZ;AACAV,IAAAA,QAAQ,CAAC;AAACW,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,OAAO,EAAEF;AAAhC,KAAD,CAZH,CAAP;AAcD,GAfD;AAgBD,CArBM,C,CAuBP","sourcesContent":["import { dinoTypeSelector } from '../helpers/DinoSelector.js'\r\nimport { eraSelector } from '../helpers/DinoSelector.js'\r\n\r\nexport const addDinosaur = (data, url) => {\r\n  dinoTypeSelector(url)\r\n\r\n\r\n//since its loading from scratch I use dinoSelector and eraSelector helpers to complete the correct fetch URL, in lieu of a dinosaur object like in the others.\r\n  return (dispatch) => {\r\n    return fetch(`https://murmuring-mesa-24613.herokuapp.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(response => response.json())\r\n\r\n    .then(dinosaur =>\r\n      // console.log(dinosaur)\r\n      dispatch({type: 'ADD_DINOSAUR', payload: dinosaur})\r\n      )\r\n  }\r\n}\r\n\r\n/// EXAMPLE URL - in reality i think i need to know the ERA and DINO TYPE and interpolate them into the URL.  (just add those options to the form and interpolate wth dot notation off of data)\r\n"]},"metadata":{},"sourceType":"module"}